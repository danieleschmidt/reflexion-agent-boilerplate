[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "reflexion-agent-boilerplate"
dynamic = ["version"]
description = "Production-ready implementation of Reflexion for language agents"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Your Organization", email = "reflexion@your-org.com"}
]
maintainers = [
    {name = "Your Organization", email = "reflexion@your-org.com"}
]
keywords = ["ai", "agents", "reflexion", "llm", "autogen", "crewai", "langchain"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "redis>=4.5.0",
    "tiktoken>=0.5.0",
    "tenacity>=8.2.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
autogen = ["pyautogen>=0.2.0"]
crewai = ["crewai>=0.22.0"]
langchain = ["langchain>=0.1.0", "langchain-openai>=0.1.0"]
all = [
    "reflexion-agent-boilerplate[autogen,crewai,langchain]"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
    "sphinx-autobuild>=2021.3.14",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-mock>=3.10.0",
]

[project.urls]
Homepage = "https://github.com/your-org/reflexion-agent-boilerplate"
Documentation = "https://docs.your-org.com/reflexion"
Repository = "https://github.com/your-org/reflexion-agent-boilerplate.git"
"Bug Reports" = "https://github.com/your-org/reflexion-agent-boilerplate/issues"
Changelog = "https://github.com/your-org/reflexion-agent-boilerplate/blob/main/CHANGELOG.md"

[project.scripts]
reflexion = "reflexion.cli:main"

[tool.setuptools_scm]
write_to = "reflexion/_version.py"

[tool.setuptools.packages.find]
where = ["."]
include = ["reflexion*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pylint.messages_control]
disable = [
    "C0330",  # Wrong hanging indentation
    "C0326",  # Bad whitespace
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
    "W0613",  # Unused argument
]

[tool.pylint.format]
max-line-length = "88"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "autogen.*",
    "crewai.*",
    "langchain.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "--tb=short",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "benchmark: Performance benchmarks",
    "slow: Slow tests",
]

[tool.coverage.run]
source = ["reflexion"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]