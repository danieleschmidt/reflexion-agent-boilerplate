version: '3.8'

services:
  # Main application
  reflexion:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: reflexion-dev
    volumes:
      - .:/app/src
      - ~/.env:/app/src/.env:ro
    environment:
      - PYTHONPATH=/app/src
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://reflexion:password@postgres:5432/reflexion
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    networks:
      - reflexion-network
    command: python -m reflexion.cli dev

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: reflexion-postgres
    environment:
      POSTGRES_DB: reflexion
      POSTGRES_USER: reflexion
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - reflexion-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reflexion -d reflexion"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: reflexion-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - reflexion-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: reflexion-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - reflexion-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: reflexion-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    networks:
      - reflexion-network
    depends_on:
      - prometheus

  # Testing environment
  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: reflexion-test
    volumes:
      - .:/app/src
    environment:
      - PYTHONPATH=/app/src
      - TESTING=true
      - DATABASE_URL=postgresql://reflexion:password@postgres:5432/reflexion_test
      - REDIS_URL=redis://redis:6379/15
    depends_on:
      - postgres
      - redis
    networks:
      - reflexion-network
    command: make test
    profiles:
      - testing

  # Performance benchmarking
  benchmark:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: reflexion-benchmark
    volumes:
      - .:/app/src
      - ./benchmarks/results:/app/results
    environment:
      - PYTHONPATH=/app/src
      - BENCHMARK=true
    command: make test-benchmark
    profiles:
      - benchmark

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  reflexion-network:
    driver: bridge