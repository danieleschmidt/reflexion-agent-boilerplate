version: '3.8'

services:
  reflexion-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.production
    container_name: reflexion-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - REFLEXION_ENV=production
      - REFLEXION_LOG_LEVEL=INFO
      - REFLEXION_DATABASE_URL=postgresql://reflexion:${DB_PASSWORD}@postgres:5432/reflexion
      - REFLEXION_REDIS_URL=redis://redis:6379/0
      - REFLEXION_METRICS_ENABLED=true
      - REFLEXION_SECURITY_ENABLED=true
    volumes:
      - reflexion_logs:/app/logs
      - reflexion_data:/app/data
      - reflexion_cache:/app/cache
    depends_on:
      - postgres
      - redis
    networks:
      - reflexion-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 1G

  reflexion-worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.production
    command: ["python", "scripts/start_worker.py"]
    restart: unless-stopped
    environment:
      - REFLEXION_ENV=production
      - REFLEXION_MODE=worker
      - REFLEXION_DATABASE_URL=postgresql://reflexion:${DB_PASSWORD}@postgres:5432/reflexion
      - REFLEXION_REDIS_URL=redis://redis:6379/0
    volumes:
      - reflexion_logs:/app/logs
      - reflexion_data:/app/data
      - reflexion_cache:/app/cache
    depends_on:
      - postgres
      - redis
    networks:
      - reflexion-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M

  postgres:
    image: postgres:15-alpine
    container_name: reflexion-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=reflexion
      - POSTGRES_USER=reflexion
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - reflexion-network
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 512M

  redis:
    image: redis:7-alpine
    container_name: reflexion-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - reflexion-network
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M

  nginx:
    image: nginx:alpine
    container_name: reflexion-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - reflexion-api
    networks:
      - reflexion-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  prometheus:
    image: prom/prometheus:latest
    container_name: reflexion-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - reflexion-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M

  grafana:
    image: grafana/grafana:latest
    container_name: reflexion-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3000:3000"
    networks:
      - reflexion-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

volumes:
  reflexion_logs:
  reflexion_data:
  reflexion_cache:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  nginx_logs:

networks:
  reflexion-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16