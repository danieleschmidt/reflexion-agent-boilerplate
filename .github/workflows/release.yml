name: Release

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write  # For OIDC
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Verify package
      run: |
        python -m twine check dist/*

    - name: Generate SBOM
      run: |
        pip install cyclone-dx-python-lib
        cyclone-dx-python-req -o sbom.json pyproject.toml
        
    - name: Upload SBOM as artifact
      uses: actions/upload-artifact@v3
      with:
        name: sbom
        path: sbom.json

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        # Use OIDC in production:
        # repository-url: https://upload.pypi.org/legacy/

  docker:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max